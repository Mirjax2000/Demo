@use "./functions" as *;

@mixin export-to-root($map, $prefix: "") {
  #{":root"} {
    @each $key, $value in map-to-css-vars($map, $prefix) {
      #{$key}: #{$value};
    }
  }
}

@mixin export-to-dataset($map, $prefix: "") {
  @each $key, $value in map-to-css-vars($map, $prefix) {
    #{$key}: #{$value};
  }
}

@mixin container($min, $max, $padding) {
  width: clamp($min, 100%, $max);
  padding-inline: $padding;
  margin-inline: auto;
}

@mixin flex-full-height-column($height: 100dvh) {
  height: $height;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
}

// flex
@mixin flex($justify: center, $align: center, $gap: 0) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
}

@mixin scroll($height: 3px) {
  overflow: auto;

  &::-webkit-scrollbar {
    height: $height;
  }

  &::-webkit-scrollbar-thumb {
    background-color: #999;
    border-radius: 4px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }
}

// --- visually-hidden ---
@mixin black-hole {
  position: absolute;
  clip-path: inset(50%);
  width: 0;
  height: 0;
  overflow: hidden;
  left: -9999px;
  white-space: nowrap;
}

// mediaqueries max-width
@mixin mq-default-max-width($width) {
  @media only screen and (max-width: $width) {
    @content;
  }
}

// mediaqueries min-width
@mixin mq-default-min-width($width) {
  @media only screen and (min-width: $width) {
    @content;
  }
}
